using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using WebApplication10.Models;
using MySql.Data.MySqlClient;
using System.Data;
using MySql.Data;
using Microsoft.AspNetCore.Http;

namespace WebApplication10.Controllers
{
    public class HomeController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult About()
        {
            ViewData["Message"] = "Your application description page.";

            return View();
        }

        public IActionResult Contact()
        {
            ViewData["Message"] = "Your contact page.";

            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
        [HttpGet]
        [Route("/mydata")]
        public IActionResult mydata()
        {
            DataTable dt = new DataTable();
            MySqlConnection con = new MySqlConnection("server=localhost;port=3306;database=mydb22;user=root;password=");
            con.Open();
            MySqlDataAdapter da = new MySqlDataAdapter("select * from students", con);
            da.Fill(dt);
            return View(dt);
        }
        [HttpPost]
        public IActionResult Index(FormCollection formCollection)
        {
            //string[] ids = formCollection["ID"].Split(new char[] { ',' });
            //foreach (string id in ids)
            //{
            //}
            return RedirectToAction("");
        }
    }
}
======================

@using System.Data
@model DataTable
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>mydata</title>
	 <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css"/>
</head>
<body>
    <form method="POST" action="/Index">


        <button type="submit" value="Delete" class="btn btn-sm btn-danger rounded-0" onclick="return confirm('Are you sure?')"><i class="fa fa-trash-o"></i> Delete</button>
        <br /><br />
        <table id="DataTable" style="width:100%;" class="table table-bordered">
            <thead>
                <tr>
                    <th><input type="checkbox" id="checkBoxAll" class="custom-checkbox" /></th>
                    <th>Sno</th>
                    <th>Name</th>
                </tr>

            </thead>
            <tbody>

                @foreach (DataRow row in Model.Rows)
                {
                    <tr>
                        <td><input type="checkbox" name="ID" value="@row[0]" class="custom-checkbox chkCheckBoxId" /></td>
                        <td>@row["sno"]</td>
                        <td>@row["sname"]</td>
                    </tr>

                </tbody>
                     }
            </table>


        </form>
   
    <script type="text/javascript">
        $(document).ready(function () {
            $('#DataTable').DataTable();
            $('#checkBoxAll').click(function () {
                if ($(this).is(":checked")) {
                    $(".chkCheckBoxId").prop("checked", true)
                }
                else {
                    $(".chkCheckBoxId").prop("checked", false)
                }
            });
        });
    </script>
</body>
</html>
===============================================
File upload:


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.FileProviders;

namespace WebApplication12
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.Configure<CookiePolicyOptions>(options =>
            {
                // This lambda determines whether user consent for non-essential cookies is needed for a given request.
                options.CheckConsentNeeded = context => true;
                options.MinimumSameSitePolicy = SameSiteMode.None;
            });

            services.AddSingleton<IFileProvider>(
             new PhysicalFileProvider(
                 Path.Combine(Directory.GetCurrentDirectory(), "wwwroot")));

            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Home/Error");
                app.UseHsts();
            }

            app.UseHttpsRedirection();
            app.UseStaticFiles();
            app.UseCookiePolicy();

            app.UseMvc(routes =>
            {
                routes.MapRoute(
                    name: "default",
                    template: "{controller=Home}/{action=Index}/{id?}");
            });
        }
    }
}
=============================================
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using WebApplication12.Models;

namespace WebApplication12.Controllers
{
    public class HomeController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult About()
        {
            ViewData["Message"] = "Your application description page.";

            return View();
        }

        public IActionResult Contact()
        {
            ViewData["Message"] = "Your contact page.";

            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
        [HttpGet]
        public IActionResult Upload()
        {
            return View(); 
        }
        [HttpPost]
        [Route("/uploading")]
        public async Task<IActionResult> Upload(IFormFile file)
        {
            if (file == null || file.Length == 0)
                return Content("file not selected");


            var path = Path.Combine(
                           Directory.GetCurrentDirectory(), "wwwroot",
                           file.FileName);

            using (var stream = new FileStream(path, FileMode.Create))
            {
                await file.CopyToAsync(stream);
            }

            return View();
        }
    }
}

